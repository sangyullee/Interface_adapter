;#include "RTOS/EERTOSHAL.h"
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x20
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x1C
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x10
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x18
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x14
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x1C
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x08
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;
;//RTOS Запуск системного таймера
;  void RunRTOS (void)
; 0002 0005 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0002 0006 TCCR2 = (1<<WGM21)|(1<<CS22)|(0<<CS20)|(0<<CS21); // Freq = CK/256 - Установить режим и предделитель
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
; 0002 0007 										         // Автосброс после достижения регистра сравнения
; 0002 0008 TCNT2 = 0;								// Установить начальное значение счётчиков
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
; 0002 0009 OCR2  = LO(TimerDivider); 				// Установить значение в регистр сравнения
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0002 000A TIMSK = (0<<TOIE0)|(1<<OCIE2);
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
; 0002 000B #asm("sei");                             // Разрешаем прерывание RTOS - запуск ОС
;PCODE: $00000017 VOL: 0
	sei
;PCODE: $00000018 VOL: 0
; 0002 000C }
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;
;
;//RTOS увеличение предделителя системного таймера
;  void StopRTOS (void)//Фактически снижение частоты системного таймера
; 0002 0011 {
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
; 0002 0012 TCCR2 = (0<<CS21)|(1<<CS22)|(1<<CS20); // Freq = CK/1024
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
; 0002 0013 }
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;
;
;//RTOS Остановка системного таймера
;  void FullStopRTOS (void)
; 0002 0018 {
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
; 0002 0019 #asm("cli");
;PCODE: $00000023 VOL: 0
	cli
;PCODE: $00000024 VOL: 0
; 0002 001A TCCR2 = 0;                        // Сбросить режим и предделитель
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
; 0002 001B TIMSK = (0<<TOIE0)|(0<<OCIE2);	 // запрещаем прерывание RTOS - остановка ОС
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
; 0002 001C #asm("sei");
;PCODE: $00000029 VOL: 0
	sei
;PCODE: $0000002A VOL: 0
; 0002 001D }
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
